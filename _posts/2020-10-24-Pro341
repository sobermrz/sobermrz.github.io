---
layout: post # 使用的布局（不需要改）
title: Problem 341 # 标题
subtitle: #副标题
date: 2020-10-24 # 时间
author: Ruizhi Ma # 作者
header-img: #这篇文章标题背景图片
catalog: true # 是否归档
tags: #标签
  - Leetcode刷题
---

# Solution URL

https://leetcode.com/submissions/detail/412787883/

# 代码

```java
/**
 * // This is the interface that allows for creating nested lists.
 * // You should not implement it, or speculate about its implementation
 * public interface NestedInteger {
 *
 *     // @return true if this NestedInteger holds a single integer, rather than a nested list.
 *     public boolean isInteger();
 *
 *     // @return the single integer that this NestedInteger holds, if it holds a single integer
 *     // Return null if this NestedInteger holds a nested list
 *     public Integer getInteger();
 *
 *     // @return the nested list that this NestedInteger holds, if it holds a nested list
 *     // Return null if this NestedInteger holds a single integer
 *     public List<NestedInteger> getList();
 * }
 */
public class NestedIterator implements Iterator<Integer> {
    Stack<Integer> s1 = new Stack<>();
    Stack<Integer> s2 = new Stack<>();

    public NestedIterator(List<NestedInteger> nestedList) {
        helper(nestedList);
        while(!s1.isEmpty()){
            s2.push(s1.pop());
        }
    }

    @Override
    public Integer next() {
        return s2.pop();
    }

    @Override
    public boolean hasNext() {
        return !s2.isEmpty();
    }

    public void helper(List<NestedInteger> nl){
        for(NestedInteger temp: nl){
            if(temp.isInteger()){
                s1.push(temp.getInteger());
            }else{
                helper(temp.getList());
            }
        }
    }
}

/**
 * Your NestedIterator object will be instantiated and called as such:
 * NestedIterator i = new NestedIterator(nestedList);
 * while (i.hasNext()) v[f()] = i.next();
 */
```
